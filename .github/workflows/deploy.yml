name: üöÄüöÄ Deployando üöÄüöÄ

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Clonando repo1
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Instalando dependencias
        run: npm install

      - name: üìù Creando .env.production
        run: |
          echo VITE_SERVER_API=https://api.pampacode.com > .env.production
          echo VITE_TOKEN_SECRET=${{ secrets.TOKEN_SECRET }} >> .env.production
          echo VITE_FIREBASE_API_KEY=${{ secrets.FIREBASE_API_KEY }} >> .env.production
          echo VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.FIREBASE_AUTH_DOMAIN }} >> .env.production
          echo VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} >> .env.production
          echo VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.FIREBASE_STORAGE_BUCKET }} >> .env.production
          echo VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} >> .env.production
          echo VITE_FIREBASE_APP_ID=${{ secrets.FIREBASE_APP_ID }} >> .env.production
          echo VITE_FIREBASE_MEASUREMENT_ID=${{ secrets.FIREBASE_MEASUREMENT_ID }} >> .env.production

      - name: üîç Verificar variables de entorno
        run: |
          echo "=== Verificando contenido de .env.production ==="
          cat .env.production
          echo "=== Verificando que las variables no est√©n vac√≠as ==="
          if [ -z "${{ secrets.FIREBASE_API_KEY }}" ]; then echo "‚ùå FIREBASE_API_KEY est√° vac√≠o"; else echo "‚úÖ FIREBASE_API_KEY tiene valor"; fi
          if [ -z "${{ secrets.FIREBASE_PROJECT_ID }}" ]; then echo "‚ùå FIREBASE_PROJECT_ID est√° vac√≠o"; else echo "‚úÖ FIREBASE_PROJECT_ID tiene valor"; fi

      - name: üõ† Generando build (carpeta dist/)
        run: |
          # Verificar nombres de archivos
          find src -type f -name "*.tsx" -o -name "*.ts" | sort
          # Corregir importaci√≥n en App.tsx
          sed -i 's/import Filter from ".\/components\/Filter";/import Filter from ".\/components\/filter";/g' src/App.tsx
          # Intentar build
          npm run build

      - name: üì§ Subir carpeta dist/ por FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ftp.unplanenjunin.com.ar
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /public_html/backoffice/
          local-dir: dist/
